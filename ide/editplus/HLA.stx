#TITLE=Randall Hyde's High Level Assembly (HLA)
; High Level Assembly syntax file.
; John Hughes
; Dept. of Computer Science
; Frostburg State University
; Frostburg, MD
; jhughes@frostburg.edu

#DELIMITER=,():=;#.[]@{}
#QUOTATION1='
#QUOTATION2="
#CONTINUE_QUOTE=-
#LINECOMMENT=//
#LINECOMMENT2=
#COMMENTON=/*
#COMMENTOFF=*/
#COMMENTON2=
#COMMENTOFF2=
#ESCAPE=
#CASE=y
#PREFIX1=.
#PREFIX2=
#PREFIX3=
#PREFIX4=
#PREFIX5=
#SUFFIX1=
#SUFFIX2=
#SUFFIX3=
#SUFFIX4=
#SUFFIX5=
#SPECIAL_STX=

#KEYWORD=Keywords
abstract
align
anyexception
begin
boolean
break
breakif
byte
char
class
const
continue
continueif
cset
data
defined
do
dup
dword
else
elseif
end
endclass
endfor
endif
endreadonly
endrecord
endstatic
endstorage
endtry
endunion
endwhile
enter
enum
exception
exit
exitif
external
for
foreach
forever
forward
if
in
inherits
int16
int32
int8
into
iterator
label
lazy
macro
method
name
namespace
noalignstk
nodisplay
noframe
not
null
override
overrides
pointer
procedure
program
qword
raise
readonly
real32
real64
real80
record
repeat
result
returns
size
static
storage
string
tbyte
text
then
this
thunk
to
try
type
union
unit
unprotected
uns128
uns16
uns32
uns64
uns8
until
val
var
while
word

#KEYWORD=Instructions
aaa
aad
aam
aas
adc
add
and
arpl
bound
bsf
bsr
bswap
bt
btc
btr
bts
call
cbw
cdq
clc
cld
cli
clts
cmc
cmova
cmovae
cmovb
cmovbe
cmovc
cmove
cmovg
cmovge
cmovl
cmovle
cmovna
cmovnae
cmovnb
cmovnbe
cmovnc
cmovne
cmovng
cmovnge
cmovnl
cmovnle
cmovno
cmovnp
cmovns
cmovnz
cmovo
cmovp
cmovpe
cmovpo
cmovs
cmovz
cmp
cmpsb
cmpsd
cmpsw
cmpxchg
cmpxchg8b
cpuid
cseg
cwd
cwde
daa
das
dec
div
dseg
emms
eseg
f2xm1
fabs
fadd
faddp
fbld
fbstp
fchs
fclex
fcmova
fcmovae
fcmovb
fcmovbe
fcmove
fcmovna
fcmovnae
fcmovnb
fcmovnbe
fcmovne
fcmovnu
fcmovu
fcom
fcomi
fcomip
fcomp
fcompp
fcos
fdecstp
fdiv
fdivp
fdivr
fdivrp
ffree
fiadd
ficom
ficomp
fidiv
fidivr
fild
fimul
fincstp
finit
fist
fistp
fisub
fisubr
fld
fld1
fldcw
fldenv
fldl2e
fldl2t
fldlg2
fldln2
fldpi
fldz
fmul
fmulp
fnop
fpatan
fprem
fprem1
fptan
frndint
frstor
fsave
fscale
fseg
fsin
fsincos
fsqrt
fst
fstcw
fstenv
fstp
fstsw
fsub
fsubp
fsubr
fsubrp
ftst
fucom
fucomi
fucomip
fucomp
fucompp
fwait
fxam
fxch
fxtract
fyl2x
fyl2xp1
gseg
hlt
idiv
imod
imul
inc
insb
insd
insw
int
intmul
invd
invlpg
iret
iretd
ja
jae
jb
jbe
jc
jcxz
je
jecxz
jf
jg
jge
jl
jle
jmp
jna
jnae
jnb
jnbe
jnc
jne
jng
jnge
jnl
jnle
jno
jnp
jns
jnz
jo
jp
jpe
jpo
js
jt
jz
lahf
lar
lds
lea
leave
les
lfs
lgdt
lgs
lidt
lldt
lock.adc
lock.add
lock.and
lock.btc
lock.btr
lock.bts
lock.cmpxchg
lock.dec
lock.inc
lock.neg
lock.not
lock.or
lock.sbb
lock.sub
lock.xadd
lock.xchg
lock.xor
lodsb
lodsd
lodsw
loop
loope
loopne
loopnz
loopz
lsl
lss
ltreg
mod
mov
movd
movq
movsb
movsd
movsw
movsx
movzx
mul
neg
nop
not
or
out
outsb
outsd
outsw
packssdw
packsswb
packuswb
paddb
paddd
paddsb
paddsw
paddusb
paddusw
paddw
pand
pandn
pavgb
pavgw
pcmpeqb
pcmpeqd
pcmpeqw
pcmpgtb
pcmpgtd
pcmpgtw
pextrw
pinsrw
pmaddwd
pmaxsw
pmaxub
pminsw
pminub
pmovmskb
pmulhuw
pmulhw
pmullw
pop
popa
popad
popf
popfd
por
psadbw
pshufw
pslld
psllq
psllw
psrad
psraw
psrld
psrlq
psrlw
psubb
psubd
psubsb
psubsw
psubusb
psubusw
psubw
punpckhbw
punpckhdq
punpckhwd
punpcklbw
punpckldq
punpcklwd
push
pusha
pushad
pushd
pushf
pushfd
pushw
pxor
rcl
rcr
rdmsr
rdpmc
rdtsc
record
rep.insb
rep.insd
rep.insw
rep.movsb
rep.movsd
rep.movsw
rep.outsb
rep.outsd
rep.outsw
rep.stosb
rep.stosd
rep.stosw
repe.cmpsb
repe.cmpsd
repe.cmpsw
repe.scasb
repe.scasd
repe.scasw
repne.cmpsb
repne.cmpsd
repne.cmpsw
repne.scasb
repne.scasd
repne.scasw
repnz.cmpsb
repnz.cmpsd
repnz.cmpsw
repnz.scasb
repnz.scasd
repnz.scasw
repz.cmpsb
repz.cmpsd
repz.cmpsw
repz.scasb
repz.scasd
repz.scasw
ret
rol
ror
rsm
sahf
sal
sar
sbb
scasb
scasd
scasw
segment
seta
setae
setb
setbe
setc
sete
setg
setge
setl
setle
setna
setnae
setnb
setnbe
setnc
setne
setng
setnge
setnl
setnle
setno
setnp
setns
setnz
seto
setp
setpe
setpo
sets
setz
sgdt
shl
shld
shr
shrd
sidt
sldt
sseg
stc
std
sti
stosb
stosd
stosw
streg
sub
test
to
try
type
ud2
val
valres
var
verr
verw
vmt
wait
wbinvd
wrmsr
xadd
xchg
xlat
xor

#KEYWORD=Directives
include

#KEYWORD=Registers
EAX
EBX
ECX
EDX
ESP
EDI
EBP
ESI
AX
BX
CX
DX
SP
DI
BP
SI
AL
BL
CL
DL
AH
BH
CH
DH
ST0
ST1
ST2
ST3
ST4
ST5
ST6
ST7
CR0
CR1
CR2
CR3
CR4
CR5
CR6
CR7
DR0
DR1
DR2
DR3
DR4
DR5
DR6
DR7
DX:AX
EDX:EAX
MM0
MM1
MM2
MM3
MM4
MM5
MM6
MM7
XMM0
XMM1
XMM2
XMM3
XMM4
XMM5
XMM6
XMM7

#KEYWORD=Constants
nl

#KEYWORD=operators
(
)
{
}
[
]
-
+
*
%
/
=
~
!
&
|
<
>
?
:
.


#